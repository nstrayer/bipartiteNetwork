rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
)
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
data
data$vertices
data$vertices %>%
select(-x,-y,-z)
library(tidyverse)
data <- readRDS('data/graph_info.Rds')
data$vertices %>%
select(-x,-y,-z)
data$vertices <- data$vertices %>%
select(-x,-y,-z)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
)
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 10
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 100
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 100
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 100
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 100
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 100
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 100
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 400
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = TRUE,
rotateSpeed = 0.01
),
max_iterations = 400
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200
)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200,
force_strength = -10
)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200,
force_strength = -1
)
data <- readRDS('data/graph_info.Rds')
# data$vertices <- data$vertices %>%
#   select(-x,-y,-z)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200,
force_strength = -1
)
library(tidyverse)
data <- readRDS('data/graph_info.Rds')
# data$vertices <- data$vertices %>%
#   select(-x,-y,-z)
devtools::install()
library(bipartiteNetwork)
bipartiteNetwork(
data,
colors = list(background = 'white'),
controls = list(
autoRotate = FALSE,
rotateSpeed = 0.01
),
max_iterations = 200,
force_strength = -1
)
shiny::runApp('demo/phewas_digger')
devtools::install()
runApp('demo/phewas_digger')
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(UpSetR)
library(bipartiteNetwork)
desiredSnps <- c(244, 244.4, 250.1)
data <- readRDS('data/data_w_snp.Rds')
data <- readRDS('demo/data/graph_info.Rds')
gather(data, code, value, -IID, -snp) %>%
mutate(code_numeric = str_remove(code, 'pheno_') %>% as.numeric()) %>%
filter(code_numeric %in% desiredSnps) %>%
select(-code_numeric) %>%
spread(code, value)
desiredSnps <- c(244, 244.4, 250.1)
gather(data, code, value, -IID, -snp) %>%
mutate(code_numeric = str_remove(code, 'pheno_') %>% as.numeric()) %>%
filter(code_numeric %in% desiredSnps) %>%
select(-code_numeric) %>%
spread(code, value)
data
data <- readRDS('demo/phewas_digger/data/data_w_snp.Rds')
gather(data, code, value, -IID, -snp) %>%
mutate(code_numeric = str_remove(code, 'pheno_') %>% as.numeric()) %>%
filter(code_numeric %in% desiredSnps) %>%
select(-code_numeric) %>%
spread(code, value)
gather(data, code, value, -IID, -snp) %>%
mutate(code_numeric = str_remove(code, 'pheno_') %>% as.numeric()) %>%
filter(code_numeric %in% desiredSnps)
ather(data, code, value, -IID, -snp) %>%
mutate(code_numeric = str_remove(code, 'pheno_') %>% as.numeric()) %>%
filter(code_numeric %in% desiredSnps) %>%
group_by(IID) %>%
mutate(total_codes = sum(value))
gather(data, code, value, -IID, -snp) %>%
mutate(code_numeric = str_remove(code, 'pheno_') %>% as.numeric()) %>%
filter(code_numeric %in% desiredSnps) %>%
group_by(IID) %>%
mutate(total_codes = sum(value))
gather(data, code, value, -IID, -snp) %>%
mutate(code_numeric = str_remove(code, 'pheno_') %>% as.numeric()) %>%
filter(code_numeric %in% desiredSnps) %>%
group_by(IID) %>%
mutate(total_codes = sum(value)) %>%
ungroup() %>%
filter(total_codes > 0) %>%
select(-code_numeric) %>%
spread(code, value)
gather(data, code, value, -IID, -snp) %>%
mutate(code_numeric = str_remove(code, 'pheno_') %>% as.numeric()) %>%
filter(code_numeric %in% desiredSnps) %>%
group_by(IID) %>%
mutate(total_codes = sum(value)) %>%
ungroup() %>%
filter(total_codes > 0) %>%
select(-code_numeric, -total_codes) %>%
spread(code, value)
runApp('demo/phewas_digger')
